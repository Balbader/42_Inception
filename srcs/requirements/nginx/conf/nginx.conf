# This directive sets the number of worker processes dynamically based
# on the number of CPU cores available. This optimizes the handling of concurrent requests.
worker_processes auto;

# specifies the file path where the PID (process ID) of the nginx master process is stored
pid /run/nginx.pid;

# includes all configuration files from the specified directory, which typically contain settings for
# various nginx modules
include /etc/nginx/modules-enabled/*.conf;

# Defines settings that affect network connections.
# "worker_connections 1024" allows each worker process to handle up 
# to 1024 simultaneous connections, which is a key parameter for tuning performance.
events {
    worker_connections 1024;
}

http {
    sendfile on; # Enables the use of the "sendfile" system call, which can speed up file derivery by bypassing the server's CPU
    tcp_nopush on; # optimizes the derivery of packets
    tcp_nodelay on; # Disables Nagle's algorithm to send small packets immediately, improving performance for certain use cases like live streaming
    keepalive_timeout 65; # Sets the timeout for keep-alive connections with the client. This directive is crucial for reducing the number of connection restarts
    types_hash_max_size 2048; # Sets the maximum size of trhe hash tables for MIME types, affecting how efficientlyh nginx can handle MIME type lookups
    include /etc/nginx/mime.types; # includes a file defining MIME types mapped to file extensions
    default_type application/octet-stream; # sets the default MIME type for responses
    ssl_protocols TLSv1.2; # specifies the SSL protocols nginx will accept; in this case, only TLS v1.2
    ssl_prefer_server_ciphers on; # Ensures that the server's preference for cipher suites is used durng the SSL/TLS handshake
    access_log /var/log/nginx/access.log; # specifies the path for the access log file
    error_log /var/log/nginx/error.log; # specifies the path for the error log file

    server {
        listen 443 ssl; # configures nginx to listen on port 443 with ssl enabled
        server_name baalbade.42.fr www.baalbade.42.fr; # sets the domain names that this server block will respond to
        root /var/www/html; # Defines the document root where the files served by nginx are located
        index index.php; # specifies the default file to serve

        ssl_certificate /etc/nginx/ssl/baalbade.42.fr.crt;
        ssl_certificate_key /etc/nginx/ssl/baalbade.42.fr.key;

        # Defines how to process requests for the root URL. try_files $uri $uri/ =404;
        # checks for the existence of files corresponding to the requested URI or directories,
        # and returns a 404 error if none are found.
        location / {
            try_files $uri $uri/ =404;
        }

        # Handles requests for PHP files using specific directives for processing PHP via FastCGI.
        # It forwards the processing of PHP files to a service (likely a PHP-FPM server)
        # running on port 9000, presumably on another container or host named 'wordpress'.
        location ~ \.php$ {
            try_files $uri =404;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass wordpress:9000;
            fastcgi_index index.php;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param PATH_INFO $fastcgi_path_info;
        }
        # Denies access to files starting with .ht, such as .htaccess,
        # a common security practice to prevent unauthorized access to sensitive configuration files.
        location ~ /\.ht {
            deny all;
        }
    }
}
